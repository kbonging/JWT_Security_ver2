plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.nexus.core'
version = '0.0.1-SNAPSHOT'
description = 'JWT + Spring Security 기본 템플릿 프로젝트'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


	// JSP 사용하기위한 의존성
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.0'
	implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT 라이브러리 (JJWT)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// spring-boot-configuration-processor
	// application.properties 에서 설정할 수 있는 자동완성 기능이 지원
	// @ConfigurationProperties 를 사용하는 클래스의 속성 정보를 자동으로 정리한 메타데이터 파일 생성
	implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
